# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore ./ConsoleAppHelloWorld/ConsoleAppHelloWorld.sln
    - name: Build
      run: dotnet build ./ConsoleAppHelloWorld/ConsoleAppHelloWorld.sln --no-restore
    - name: Test
      run: dotnet test ./ConsoleAppHelloWorld/ConsoleAppHelloWorld.sln --no-build --verbosity normal
    - name: Create Dockerfile if it doesn't exist
      run: |
        if [ ! -f Dockerfile ]; then
          echo "Creating Dockerfile..."
          cat << 'EOT' > Dockerfile
# Stage 1: Build the application
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
WORKDIR /app

# Copy the solution and project files
COPY ["ConsoleAppHelloWorld/ConsoleAppHelloWorld.csproj", "ConsoleAppHelloWorld/"]

# Restore dependencies
RUN dotnet restore "ConsoleAppHelloWorld/ConsoleAppHelloWorld.csproj"

# Copy the rest of the application code
COPY . .

# Navigate to the project directory
WORKDIR /app/ConsoleAppHelloWorld

# Build and publish the application
RUN dotnet publish "ConsoleAppHelloWorld.csproj" -c Release -o out

# Stage 2: Create the runtime image
FROM mcr.microsoft.com/dotnet/runtime:8.0 AS runtime
WORKDIR /app

# Copy the published application from the build stage
COPY --from=build /app/ConsoleAppHelloWorld/out ./

# Define the entry point for the container
ENTRYPOINT ["dotnet", "ConsoleAppHelloWorld.dll"]
EOT
        fi
        
    - name: Build & Push Docker image
      uses: mr-smithers-excellent/docker-build-push@v6
      with:
        image: fdmdev120/demo-app
        registry: docker.io
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        dockerfile: ./Dockerfile
        context: ./
